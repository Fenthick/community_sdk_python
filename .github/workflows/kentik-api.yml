---
name: kentik-api

# Run this workflow all on pushes to master
on:
  push:
    paths: 'kentik_api_library/**'
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Static Analysis of the SDK and its code
  # Stuff like linters, etc.
  code-tests:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        python-version: [ '3.7', '3.8' ]
    steps:
      - name: (HELPER) Checkout Code
        uses: actions/checkout@v2
      - name: Prepare python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install requirements
        working-directory: ./kentik_api_library
        run: pip3 install -r requirements.txt
      - name: PyTest
        working-directory: ./kentik_api_library
        run: python3 setup.py pytest
      - name: PyLint
        working-directory: ./kentik_api_library
        run: python3 setup.py pylint
      - name: Mypy
        working-directory: ./kentik_api_library
        run: python3 setup.py mypy

  build:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        python-version: [ '3.7', '3.8' ]
    steps:
      - name: (HELPER) Checkout Code
        uses: actions/checkout@v2
      - name: Prepare python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Build package
        working-directory: ./kentik_api_library
        run: |
          pip3 install -r requirements.txt
          python3 setup.py build sdist bdist_wheel
      - name: Archive code
        uses: actions/upload-artifact@v2
        with:
          path: kentik_api_library/dist/*.gz
          retention-days: 5
      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          name: artifacts.python${{ matrix.python-version }}
          path: kentik_api_library/dist/
          retention-days: 5

  package-tests:
    runs-on: ubuntu-latest
    needs: [ build ]
    strategy: 
      matrix:
        python-version: [ '3.7', '3.8' ]
    steps:
      - name: Prepare python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts.python${{ matrix.python-version }}
          path: artifacts
      - name: Install lib from package
        run: |
          ls -l
          ls -l artifacts
          pip install artifacts/*.whl
