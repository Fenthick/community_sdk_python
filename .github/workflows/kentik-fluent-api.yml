name: kentik-fluent-api

# Run this workflow all on pushes to master
on:
  push:
    paths: 'kentik_api_library/**'
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Static Analysis of the SDK and its code
  # Stuff like linters, etc.
  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
      - name: (HELPER) Checkout Code
        uses: actions/checkout@v2
      - name: Python Pylint
        uses: fylein/python-pylint-github-action@v4
        with:
          args: pip3 install -r kentik_api_library/requirements.txt && pylint --rcfile=kentik_api_library/.pylintrc kentik_fluent_api
  
  dynamic-analysis:
    runs-on: ubuntu-latest
    
    steps:
      - name: (HELPER) Checkout Code
        uses: actions/checkout@v2
      - name: Python Pytest
        uses: fylein/python-pytest-github-action@v2
        with:
          args: pip3 install -r kentik_api_library/requirements.txt && pytest kentik_api_library/unit_tests

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8' ]
    steps:
      - name: (HELPER) Checkout Code
        uses: actions/checkout@v2
      - name: Prepare python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Build package
        working-directory: ./kentik_api_library
        run: |
          pip3 install -r requirements.txt
          python3 setup.py build sdist bdist_wheel
      - name: Archive code
        uses: actions/upload-artifact@v2
        with:
          name: source.python-${{ matrix.python-version }}.tar.gz
          path: kentik_api_library/dist/*.gz
          retention-days: 5
      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          name: package.python-${{ matrix.python-version }}.whl
          path: kentik_api_library/dist/*.whl
          retention-days: 5

  test-package:
    runs-on: ubuntu-latest
    needs: [ build ]
    strategy:
      matrix:
        python-version: [ '3.7', '3.8' ]
    steps:
      - name: Prepare python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: package.python-${{ matrix.python-version }}.whl
          path: package.zip
          #      - name: Install lib from package
          #        run: |
          #          ls -l
          #          unzip package.zip
          #          ls -l
          #          pip install package.whl

